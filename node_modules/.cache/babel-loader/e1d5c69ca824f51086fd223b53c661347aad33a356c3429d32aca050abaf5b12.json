{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\autologon\\\\Documents\\\\react\\\\src\\\\Timer.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport PlayImage from './assets/imgs/play.png';\nimport StopImage from './assets/imgs/stop.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getTimeInMinutes(seconds) {\n  let minutos = Math.floor(seconds / 60);\n  return minutos.toLocaleString('pt-BR', {\n    minimumIntegerDigits: 2\n  });\n}\nfunction getTimeSeconds(seconds) {\n  let s = seconds % 60;\n  return s.toLocaleString('pt-BR', {\n    minimumIntegerDigits: 2\n  });\n}\nconst Container = styled.div`\n    display: flex;\n    border: 1px solid #00000022;\n    border-radius: 10px;\n    box-shadow: 0 0 8px #00000011;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    width: 300px;\n    gap: 20px;\n    padding: 20px 0px;\n`;\n_c = Container;\nconst Visor = styled.p`\n    font-family: calibri;\n    font-weight: bold;\n    font-size: 40px;\n    margin: 0;\n`;\n_c2 = Visor;\nconst ButtonsContainer = styled.div`\n    display: flex;\n    gap: 40px;\n`;\n_c3 = ButtonsContainer;\nconst Button = styled.img`\n    cursor: pointer;\n    width: 30px;\n    height: 30px;\n    object-fit: contain;\n    border: 1px solid #00000022;\n    border-radius: 5px;\n    box-shadow: 0 0 8px #00000011;\n    padding: 10px;\n    background-color: white;\n    transition: 0.1s all;\n\n    &:hover {\n        filter: invert();\n    }\n\n    &[disabled], &[invert]:hover {\n        cursor: unset;\n        opacity: 0.5;\n        filter: none;\n    }\n`;\n_c4 = Button;\nclass Timer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      tempo: 0,\n      intervalID: null\n    };\n  }\n  startTimer() {\n    this.setState({\n      intervalID: setInterval(() => {\n        this.setState({\n          tempo: this.state.tempo + 1\n        });\n      }, 1000)\n    });\n  }\n  stopTimer() {\n    clearInterval(this.state.intervalID);\n    this.setState({\n      intervalID: null\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Visor, {\n        children: [getTimeInMinutes(this.state.tempo), \" : \", getTimeSeconds(this.state.tempo)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          src: PlayImage,\n          disabled: this.state.intervalID !== null,\n          onClick: this.startTimer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          src: StopImage,\n          disabled: this.state.intervalID === null,\n          onClick: this.stopTimer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this);\n  }\n}\n/*\r\nconst Timer = () => {\r\n    const [tempo, setTempo] = useState(0);\r\n    const [contar, setContar] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (contar) setTempo(tempo + 1);\r\n        }, 1000);\r\n    }, [contar, tempo]);\r\n\r\n    function startTimer() {\r\n        setTempo(0);\r\n        setContar(true);\r\n    }\r\n\r\n    const stopTimer = () => {\r\n        setContar(false);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Visor>\r\n                {getTimeInMinutes(tempo)} : {getTimeSeconds(tempo)}\r\n            </Visor>\r\n            <ButtonsContainer>\r\n                <Button \r\n                    src={PlayImage} \r\n                    disabled={contar === true}\r\n                    onClick={startTimer}\r\n                ></Button>\r\n                <Button \r\n                    src={StopImage}\r\n                    disabled={contar === false}\r\n                    onClick={stopTimer}\r\n                ></Button>\r\n            </ButtonsContainer>\r\n        </Container>\r\n    )\r\n};\r\n*/\n\nexport default Timer;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Visor\");\n$RefreshReg$(_c3, \"ButtonsContainer\");\n$RefreshReg$(_c4, \"Button\");","map":{"version":3,"names":["React","useState","useEffect","styled","PlayImage","StopImage","jsxDEV","_jsxDEV","getTimeInMinutes","seconds","minutos","Math","floor","toLocaleString","minimumIntegerDigits","getTimeSeconds","s","Container","div","_c","Visor","p","_c2","ButtonsContainer","_c3","Button","img","_c4","Timer","Component","constructor","state","tempo","intervalID","startTimer","setState","setInterval","stopTimer","clearInterval","render","children","fileName","_jsxFileName","lineNumber","columnNumber","src","disabled","onClick","$RefreshReg$"],"sources":["C:/Users/autologon/Documents/react/src/Timer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport PlayImage from './assets/imgs/play.png';\r\nimport StopImage from './assets/imgs/stop.png';\r\n\r\nfunction getTimeInMinutes(seconds) {\r\n    let minutos = Math.floor(seconds / 60);\r\n    return minutos.toLocaleString('pt-BR', { minimumIntegerDigits: 2 });\r\n}\r\n\r\nfunction getTimeSeconds(seconds) {\r\n    let s = seconds % 60;\r\n    return s.toLocaleString('pt-BR', { minimumIntegerDigits: 2 });\r\n}\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    border: 1px solid #00000022;\r\n    border-radius: 10px;\r\n    box-shadow: 0 0 8px #00000011;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    width: 300px;\r\n    gap: 20px;\r\n    padding: 20px 0px;\r\n`;\r\n\r\nconst Visor = styled.p`\r\n    font-family: calibri;\r\n    font-weight: bold;\r\n    font-size: 40px;\r\n    margin: 0;\r\n`;\r\n\r\nconst ButtonsContainer = styled.div`\r\n    display: flex;\r\n    gap: 40px;\r\n`;\r\n\r\nconst Button = styled.img`\r\n    cursor: pointer;\r\n    width: 30px;\r\n    height: 30px;\r\n    object-fit: contain;\r\n    border: 1px solid #00000022;\r\n    border-radius: 5px;\r\n    box-shadow: 0 0 8px #00000011;\r\n    padding: 10px;\r\n    background-color: white;\r\n    transition: 0.1s all;\r\n\r\n    &:hover {\r\n        filter: invert();\r\n    }\r\n\r\n    &[disabled], &[invert]:hover {\r\n        cursor: unset;\r\n        opacity: 0.5;\r\n        filter: none;\r\n    }\r\n`;\r\n\r\nclass Timer extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            tempo: 0,\r\n            intervalID: null\r\n        };\r\n    }\r\n\r\n    startTimer() {\r\n        this.setState({\r\n            intervalID: setInterval(() => {\r\n                this.setState({\r\n                    tempo: this.state.tempo + 1\r\n                });\r\n            }, 1000)\r\n        });\r\n    }\r\n\r\n    stopTimer() {\r\n        clearInterval(this.state.intervalID);\r\n        this.setState({intervalID: null});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Visor>\r\n                    {getTimeInMinutes(this.state.tempo)} : {getTimeSeconds(this.state.tempo)}\r\n                </Visor>\r\n                <ButtonsContainer>\r\n                    <Button \r\n                        src={PlayImage} \r\n                        disabled={this.state.intervalID !== null}\r\n                        onClick={this.startTimer}\r\n                    ></Button>\r\n                    <Button \r\n                        src={StopImage}\r\n                        disabled={this.state.intervalID === null}\r\n                        onClick={this.stopTimer}\r\n                    ></Button>\r\n                </ButtonsContainer>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n}\r\n/*\r\nconst Timer = () => {\r\n    const [tempo, setTempo] = useState(0);\r\n    const [contar, setContar] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (contar) setTempo(tempo + 1);\r\n        }, 1000);\r\n    }, [contar, tempo]);\r\n\r\n    function startTimer() {\r\n        setTempo(0);\r\n        setContar(true);\r\n    }\r\n\r\n    const stopTimer = () => {\r\n        setContar(false);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Visor>\r\n                {getTimeInMinutes(tempo)} : {getTimeSeconds(tempo)}\r\n            </Visor>\r\n            <ButtonsContainer>\r\n                <Button \r\n                    src={PlayImage} \r\n                    disabled={contar === true}\r\n                    onClick={startTimer}\r\n                ></Button>\r\n                <Button \r\n                    src={StopImage}\r\n                    disabled={contar === false}\r\n                    onClick={stopTimer}\r\n                ></Button>\r\n            </ButtonsContainer>\r\n        </Container>\r\n    )\r\n};\r\n*/\r\n\r\nexport default Timer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}